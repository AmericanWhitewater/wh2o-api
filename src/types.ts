import { Feature, Reach } from "@prisma/client"

/**
 * Client-facing extension of the Reach model type generated by Prism
 * that includes the geometry and features.
 *
 */
export type ReachExtended = Omit<Reach, "geom"> & {
  geom: number[][]
  features: FeatureExtended[]
}

/**
 * Client-facing extension of the Feature model type generated by Prism
 * that includes the location.
 *
 */
export type FeatureExtended = Feature & {
  location: number[]
}

export type Polygon = {
  type: "Polygon"
  coordinates: number[][][]
}

export type LineString = {
  type: "LineString"
  coordinates: number[][]
}

export type Point = {
  type: "Point"
  coordinates: number[]
}

export type Geometry = Polygon | LineString | Point

/**
 * This is a hack to get around the fact that the Reach model returned by the
 * legacy API has a geom property that is a string, but the Reach model in the
 * database has a geom property that is an array of numbers.
 */
export type ReachLegacy = Omit<Reach, "geom"> & {
  geom: string
}
