// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  reach     Reach    @relation(fields: [reachId], references: [id])
  reachId   Int
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  name     String?
  posts    Post[]
  articles Article[]
  profile  Profile?
}

model Reach {
  id             Int       @id @default(autoincrement())
  abstract       String?
  altname        String?
  avggradient    Int?
  county         String?
  description    String?
  events         Event[]
  features       Feature[]
  gages          Gage[]
  geom           Float[] // Unsupported('geom') https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#unsupported
  /// the difficulty rating of the reach
  grade          String
  length         Float?
  maxgradient    Int?
  permitid       Int?
  photoid        Int?
  posts          Post[]
  river          String
  section        String
  shuttledetails String?
  state          String
  zipcode        String?
}

model Feature {
  id        Int              @id @default(autoincrement())
  name      String
  grade     String
  reach     Reach            @relation(fields: [reachId], references: [id])
  reachId   Int
  character FeatureCharacter
  distance  Float?
}

enum FeatureCharacter {
  access
  hazard
  other
  playspot
  portage
  putin
  rapid
  takeout
  waterfall
}

model Event {
  id      Int    @id @default(autoincrement())
  name    String
  state   String
  reach   Reach  @relation(fields: [reachId], references: [id])
  reachId Int
}

model Article {
  id       Int    @id @default(autoincrement())
  title    String
  subtitle String
  author   User   @relation(fields: [authorId], references: [id])
  authorId Int
}

model Gage {
  id      Int    @id @default(autoincrement())
  name    String
  state   String
  reach   Reach  @relation(fields: [reachId], references: [id])
  reachId Int
}

generator jsonSchema {
  provider = "prisma-json-schema-generator"
  output   = "../src/openapi"
}
